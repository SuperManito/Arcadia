import{r as d,Z as r,$ as l}from"./index-BW0Kz9QR.js";const{apiUrl:g=""}=d(),p=({path:e},s="message")=>r.get({url:`/file?path=${e}`},{errorMessageMode:s}),c=(e,s="message")=>r.post({url:"/file",data:e,headers:{"Content-Type":l.JSON}},{errorMessageMode:s,formatDate:!1}),u=async({type:e="",isDir:s="",keywords:t="",startTime:a="",endTime:n=""},i="message")=>{const o=await r.get({url:`/file/tree?type=${e}&isDir=${s}&keywords=${t}&startTime=${a}&endTime=${n}`},{errorMessageMode:i});return Array.isArray(o)&&o.length>0?e?o.length===1&&o[0]?.children?o[0].children:[]:o:[]},m=({path:e},s="message")=>r.get({url:`/file/dir?path=${encodeURIComponent(e)}`},{errorMessageMode:s}),M=(e,s="message")=>r.delete({url:"/file",data:e,headers:{"Content-Type":l.JSON}},{errorMessageMode:s}),h=({path:e},s="message")=>new Promise(async t=>{const a=await r.get({url:`/file/download?path=${e}`,responseType:"blob"},{isReturnNativeResponse:!0,errorMessageMode:s});if(a.headers["content-disposition"])t({code:1,blob:a.data});else{const n=new FileReader;n.readAsText(a.data),n.onload=function(){const i=n.result||"{}";t(JSON.parse(i))}}}),y=(e,s="message")=>r.post({url:"/file/rename",data:e,headers:{"Content-Type":l.JSON}},{errorMessageMode:s}),$=({path:e},s="message")=>r.get({url:`/file/info?path=${e}`},{errorMessageMode:s}),T=(e,s="message")=>r.post({url:"/file/move",data:e,headers:{"Content-Type":l.JSON}},{errorMessageMode:s}),C=(e,s="message")=>r.post({url:"/file/create",data:e,headers:{"Content-Type":l.JSON}},{errorMessageMode:s}),w=({params:e,path:s,onUploadProgress:t})=>r.uploadFile({url:`${g}/file/upload?path=${s}`,onUploadProgress:t,timeout:600*1e3},e);export{u as a,y as b,M as c,h as d,C as e,T as f,p as g,w as h,m as i,$ as j,c as s};
